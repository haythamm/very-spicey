"""
______________  ______________________   ____________  __
___  __ \__  / / /_  __ \__  ____/__  | / /___  _/_  |/ /
__  /_/ /_  /_/ /_  / / /_  __/  __   |/ / __  / __    /
_  ____/_  __  / / /_/ /_  /___  _  /|  / __/ /  _    |
/_/     /_/ /_/  \____/ /_____/  /_/ |_/  /___/  /_/|_|

Pinpoint Wrapper
Version: 1.0

Developed by Haytham M & Kolby D
"""

import os
import itertools
import threading
import time
import sys



# import sys

pck_loc = "./kernels/pck/pck00010.tpc"
proj_path = "./"
done = False


def animate():
    for c in itertools.cycle(['.', '..', '...', '....', '.....']):
        if done:
            break
        sys.stdout.write('\rrunning ' + c)
        sys.stdout.flush()
        time.sleep(0.3)
    sys.stdout.write('\rDone!     ')
    return


def convert_coords(long, lat):
    long = float(long) * -1
    lat = float(lat) - 90
    full_str = "(" + str(long) + ", " + str(lat) + ", 180.0)"
    return full_str


def format_coords(long, lat, alt):
    full_str = "(" + str(long) + ", " + str(lat) + ", " + str(alt) + ")"
    return full_str


def pinpoint_setup():
    locations = []
    fullnames = []
    filename = input("Enter a name for the setup file: ")
    f = open('temp.bin', "w+")
    print("\n---Add locations---")
    choice = 'y'
    while choice == 'y' or '':
        fullname = input("Please enter the location's full name: ")
        shorthand = input("Please enter a shorthand notation for the location (ex. ASU-GS): ")
        idcode = input("Please enter the location's ID code: ")
        lat = input("Please enter the location's Latitude: ")
        long = input("Please enter the location's Longitude: ")
        alt = input("Please enter the location's Altitude: ")
        formatted_coords = format_coords(long, lat, alt)
        naif_coords = convert_coords(long, lat)
        fullnames.append(fullname)

        f.write("\n" + shorthand + "_CENTER                       = 399\n")
        f.write(shorthand + "_FRAME                    = 'IAU_EARTH'\n")
        f.write(shorthand + "_IDCODE                   = " + idcode + "\n")
        f.write(shorthand + "_LATLON                  = " + formatted_coords + "\n")
        f.write(shorthand + "_UP                       = 'Z'\n")
        f.write(shorthand + "_NORTH                    = 'X'\n\n")

        f.write("FRAME_" + shorthand + "_TOPO               = " + idcode + "\n")
        f.write("FRAME_" + idcode + "_NAME              = '" + shorthand + "_TOPO'\n")
        f.write("FRAME_" + idcode + "_CLASS             = 4\n")
        f.write("FRAME_" + idcode + "_CLASS_ID          = " + idcode + "\n")
        f.write("FRAME_" + idcode + "_CENTER            = " + idcode + "\n\n")

        f.write("OBJECT_" + idcode + "_FRAME            = '" + shorthand + "_TOPO'\n\n")

        f.write("TKFRAME_" + shorthand + "_TOPO_RELATIVE    = 'IAU_EARTH'\n")
        f.write("TKFRAME_" + shorthand + "_TOPO_SPEC        = 'ANGLES'\n")
        f.write("TKFRAME_" + shorthand + "_TOPO_UNITS       = 'DEGREES\n")
        f.write("TKFRAME_" + shorthand + "_TOPO_AXES        = (3, 2, 3)\n")
        f.write("TKFRAME_" + shorthand + "_TOPO_ANGLES      = " + naif_coords + "\n")

        locations.append(shorthand)
        choice = input("Would you like to add another location? (y/n)")
        while choice != 'y' and choice != 'n' and choice != '':  # asks again if input is invalid
            choice = input("Invalid input :(, please enter 'y' or 'n': ")
    print("Finalizing setup file...")
    f.close()
    f2 = open(filename + ".setup", "w+")
    sites_list = "SITES = (" + str(locations) + ")"

    punctuation = str.maketrans(dict.fromkeys('[]'))
    sites_list = sites_list.translate(punctuation)
    print("Generating setup file...")
    # f2.write("\\begintext\n")
    #
    # f2.write("\n\tGenerated by Pinpoint Wrapper")
    # f2.write("\tDeveloped by Haytham M")
    #
    # f2.write("\n\nLocations: \n")
    # for location in fullnames:
    #     f2.write("\n\t" + location)

    f2.write("\n\n\\begindata\n")
    f2.write(sites_list)

    with open("temp.bin") as f:
        for line in f:
            f2.write(line)
    f2.close()
    os.remove("temp.bin")
    print("Complete!")
    new_filename = str(filename) + ".setup"
    print("The setup file name is ")
    return new_filename


def pinpoint(setup_filename):
    print("Running Pinpoint...")
    t = threading.Thread(target=animate)
    t.start()
    #command2 = str("chmod u+x ./kernels/pinpoint")
    # command = str("./kernels/pinpoint -def " + setup_filename + " -pck " + pck_loc + " -spk " + setup_filename[:-6] +
    #               ".bsp -fk" + setup_filename[:-6] + ".tf")
    command = str("./kernels/pinpoint -def " + proj_path + setup_filename + " -spk " + proj_path + setup_filename[:-6] +
                  ".bsp -pck " + "kernels/pck00010.tpc -fk " + proj_path + setup_filename[:-6] + ".tf")
    print(command)
    os.system(command)
    #os.system(command)
    global done
    done = True
    print("Complete!")


def main():
    choice = 'y'
    while choice == 'y' or '':
        filename = pinpoint_setup()
        pinpoint(filename)
        choice = input("Would you like to create another file? (y/n) ")
        while choice != 'y' and choice != 'n' and choice != '':  # asks again if input is invalid
            choice = input("Invalid input :(, please enter 'y' or 'n': ")

main()
